{"version":3,"sources":["service.js","components/Charts/BarChart.jsx","components/Country.jsx","components/Select.jsx","components/Countries/StyledCountries.jsx","components/Countries/Countries.jsx","components/Charts/PieChart.jsx","components/Charts/LineChart.jsx","components/Home/StyledHome.jsx","components/Home/Home.jsx","components/Login/StyledLogin.jsx","components/Login/Login.jsx","components/Register/StyledRegister.jsx","components/Register/Register.jsx","components/Nav/StyledNav.jsx","components/Nav/Nav.jsx","components/Charts/SingleLineChart.jsx","components/Charts/SingleDoughnutChart.jsx","components/CountryDetails/StyledCountryDetails.jsx","components/CountryDetails/CountryDetails.jsx","components/Footer/StyledFooter.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["getAllUsers","axios","get","BarChart","balkanCountries","allCasesBalkan","map","country","cases","data","labels","datasets","label","backgroundColor","deaths","recovered","options","title","display","text","fontColor","fontSize","scales","yAxes","ticks","xAxes","gridLines","legend","maintainAspectRatio","Country","src","countryInfo","flag","style","width","height","to","toLocaleString","population","Select","setSelectNumber","onChange","e","target","value","Infinity","StyledCountries","styled","div","StyledInput","Countries","allCountries","useState","selectNumber","page","setPage","searchInput","setSearchInput","filteredCountries","filter","toLowerCase","includes","toLocaleLowerCase","pagesNumbers","start","finish","tmp","i","push","rangeArray","Math","ceil","length","className","type","placeholder","slice","pageNumber","onClick","PieChart","continents","continent","borderColor","LineChart","days","pointBackgroundColor","pointBorderColor","min","max","stepSize","StyledHome","StyledCharts","StyledDate","Home","historyStats","worldStats","setWorldStats","useEffect","then","res","String","Date","updated","active","StyledLogin","Login","setUser","user","loginUsername","setLoginUsername","loginPassword","setLoginPassword","loginError","setLoginError","history","useHistory","onSubmit","preventDefault","find","el","username","email","password","paddingLeft","paddingRight","StyledRegister","Register","setUsername","setEmail","setPassword","error","setError","regEx","emailRegEx","test","validData","some","window","alert","post","registerUser","console","log","StyledNav","nav","StyledLink","Link","Nav","textAlign","SingleLineChart","SingleDoughnutChart","countryDetail","casesPerOneMillion","activePerOneMillion","deathsPerOneMillion","recoveredPerOneMillion","StyledCountryDetails","CountryDetails","oneCountryHistory","setOneCountryHistory","Object","values","timeline","keys","useParams","c","mounted","getOneCountryHistory","critical","tests","todayCases","todayDeaths","marginBottom","StyledFooter","footer","Footer","href","App","setAllCountries","setHistoryStats","setContinents","setBalkanCountries","basename","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d54f2bf.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const getAllUsers = () => axios.get('https://covid-19-tracker-server.herokuapp.com/users')\r\nexport const registerUser = (username,email,password) => axios.post('https://covid-19-tracker-server.herokuapp.com/users',{username,email,password})\r\n\r\nexport const getAllCountries = () => axios.get('https://disease.sh/v3/covid-19/countries')\r\nexport const getWorldStats = () => axios.get('https://disease.sh/v3/covid-19/all')\r\nexport const getOneCountry = (country) => axios.get(`https://disease.sh/v3/covid-19/countries/${country}`)\r\n\r\n\r\nexport const getHistoricalStats = () => axios.get(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\")\r\nexport const getContinents = () => axios.get('https://disease.sh/v3/covid-19/continents')\r\n\r\nexport const getBalkan = () => axios.get('https://disease.sh/v3/covid-19/countries/Serbia%2CGreece%2CBosnia%2CCroatia%2CMacedonia%2CAlbania%2CBulgaria%2CRomania%2CMontenegro')\r\nexport const getOneCountryHistory = (country) => axios.get(`https://disease.sh/v3/covid-19/historical/${country}?lastdays=30`)","import { Bar } from 'react-chartjs-2'\r\n\r\n\r\nconst BarChart = ({ balkanCountries }) => {\r\n\r\n    let allCasesBalkan = balkanCountries.map(country => country.cases)\r\n    let allCountriesBalkan = balkanCountries.map(country => country.country)\r\n    let deathsCountriesBalkan = balkanCountries.map(country => country.deaths)\r\n    let recoveredCountriesBalkan = balkanCountries.map(country => country.recovered)\r\n\r\n    const data = {\r\n        labels: allCountriesBalkan,\r\n        datasets: [\r\n            {\r\n                label: 'Total cases ',\r\n                data: allCasesBalkan ,\r\n                backgroundColor: [\r\n                    'rgb(209, 153, 10)',\r\n                    'rgb(209, 153, 10)',\r\n                    'rgb(209, 153, 10)',\r\n                    'rgb(209, 153, 10)',\r\n                    'rgb(209, 153, 10)',\r\n                    'rgb(209, 153, 10)',\r\n                    'rgb(209, 153, 10)',\r\n                    'rgb(209, 153, 10)',\r\n                    'rgb(209, 153, 10)'],\r\n            },\r\n            {\r\n                label: 'Deaths',\r\n                data: deathsCountriesBalkan ,\r\n                backgroundColor: [\r\n                    'rgb(148, 11, 11)',\r\n                    'rgb(148, 11, 11)',\r\n                    'rgb(148, 11, 11)',\r\n                    'rgb(148, 11, 11)',\r\n                    'rgb(148, 11, 11)',\r\n                    'rgb(148, 11, 11)',\r\n                    'rgb(148, 11, 11)',\r\n                    'rgb(148, 11, 11)',\r\n                    'rgb(148, 11, 11)'],\r\n            },\r\n            {\r\n                label: 'Recovered',\r\n                data: recoveredCountriesBalkan ,\r\n                backgroundColor: [\r\n                    'rgb(11, 114, 20)',\r\n                    'rgb(11, 114, 20)',\r\n                    'rgb(11, 114, 20)',\r\n                    'rgb(11, 114, 20)',\r\n                    'rgb(11, 114, 20)',\r\n                    'rgb(11, 114, 20)',\r\n                    'rgb(11, 114, 20)',\r\n                    'rgb(11, 114, 20)',\r\n                    'rgb(11, 114, 20)'],\r\n            }\r\n        ]\r\n    }\r\n    const options = {\r\n        title: {\r\n            display: true,\r\n            text: 'Balkan peninsula statistics',\r\n            fontColor:'white',\r\n            fontSize: 20\r\n        },\r\n        scales:{\r\n            yAxes:[\r\n                {\r\n                    ticks:{\r\n                        fontColor:\"white\",\r\n                    }\r\n                }\r\n            ],\r\n            xAxes: [\r\n                {\r\n                    gridLines:{\r\n                        display:true,\r\n                    },\r\n                    ticks: {\r\n                        fontColor:\"white\",\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontSize: 13,\r\n                fontColor:'white',\r\n                \r\n            }\r\n        },\r\n        maintainAspectRatio:false\r\n        \r\n    }\r\n    return (\r\n        <>\r\n            <Bar data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BarChart","import { Link } from \"react-router-dom\"\r\n\r\nconst Country = ({ country }) => {\r\n    return (\r\n        <tr>\r\n            <td>{<img src={country.countryInfo.flag} style={{ width: '30px', height: '20px' }}></img>}<Link to={`/${country.country}`} >{country.country}</Link></td>\r\n            <td>{country.cases.toLocaleString()}</td>\r\n            <td>{country.deaths.toLocaleString()}</td>\r\n            <td>{country.recovered.toLocaleString()}</td>\r\n            <td>{country.population.toLocaleString()}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Country","const Select = ({ setSelectNumber }) => {\r\n    return (\r\n        <select onChange={(e) => setSelectNumber(e.target.value)}>\r\n            <option value={20}>20</option>\r\n            <option value={50}>50</option>\r\n            <option value={100}>100</option>\r\n            <option value={Infinity}>All</option>\r\n        </select>\r\n    )\r\n}\r\n\r\nexport default Select","import styled from 'styled-components'\r\nexport const StyledCountries = styled.div`\r\n\r\n    overflow-x:auto;\r\n    width:80%;\r\n    margin:0 auto;\r\n\r\n  table {\r\n    font-family: \"Arial Black\", Gadget, sans-serif;\r\n    border: 2px solid #415172;\r\n    background-color: #4A4A4A;\r\n    width: 80%;\r\n    text-align: center;\r\n    border-collapse: collapse;\r\n    margin:auto;\r\n    line-height:2.5;\r\n  }\r\n   td, table th {\r\n    border: 1px solid #4A4A4A;\r\n    padding: 3px 2px;\r\n  }\r\n   tbody td {\r\n    font-size: 13px;\r\n    color: #E6E6E6;\r\n  }\r\n   tr:nth-child(even) {\r\n    background: #888888;\r\n  }\r\n   thead {\r\n    background: #000000;\r\n    border-bottom: 3px solid #000000;\r\n  }\r\n   thead th {\r\n    font-size: 15px;\r\n    font-weight: bold;\r\n    color: #E6E6E6;\r\n    text-align: center;\r\n    border-left: 2px solid #4A4A4A;\r\n  }\r\n   thead th:first-child {\r\n    border-left: none;\r\n  }\r\n`\r\n\r\nexport const StyledInput = styled.div`\r\n    margin:0 auto;\r\n    display: flex;\r\n    flex-direction: row!important;\r\n    justify-content:space-between;\r\n    align-items:center;\r\n    width:64%;\r\n\r\ninput { \r\n    margin-top:1rem;\r\n    margin-bottom: 1rem;\r\n    width: 20%;\r\n    height: 100%;\r\n}\r\nselect {\r\n    height: 100%;\r\n    line-height: 1.8;\r\n    margin-left: 0px;\r\n}\r\n@media (max-width:768px ){\r\n    width:70%;\r\n\r\n  input{\r\n    width:40%;\r\n  }\r\n}\r\n@media (max-width:500px){\r\n    width:80%;\r\n    \r\n    input {\r\n      width:50%;\r\n    }\r\n}\r\n`\r\n","import Country from \"../Country\"\r\nimport { useState } from \"react\"\r\nimport Select from \"../Select\"\r\nimport { StyledCountries, StyledInput } from \"./StyledCountries\"\r\n\r\nfunction rangeArray(start, finish) {\r\n    let tmp = []\r\n    for (let i = start; i < finish; i++) {\r\n        tmp.push(i)\r\n    }\r\n    return tmp\r\n}\r\n\r\nconst Countries = ({ allCountries }) => {\r\n\r\n    const [selectNumber, setSelectNumber] = useState(20)\r\n    const [page, setPage] = useState(1)\r\n    const [searchInput, setSearchInput] = useState('')\r\n\r\n\r\n    let filteredCountries = allCountries.filter(country => country.country.toLowerCase().includes(searchInput.toLocaleLowerCase()))\r\n    let numberOfPages = Math.ceil(filteredCountries.length / selectNumber)\r\n    let pagesNumbers = rangeArray(1, numberOfPages + 1)\r\n\r\n    return (\r\n        <>\r\n            <StyledInput >\r\n                <div className='select'>\r\n                    <span>Show</span><Select setSelectNumber={setSelectNumber} /><span>countries</span>\r\n                </div>\r\n                <input type=\"search\" placeholder='Search...' onChange={(e) => setSearchInput(e.target.value)}></input>\r\n            </StyledInput>\r\n            <StyledCountries >\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Country</th>\r\n                            <th>Total cases</th>\r\n                            <th>Deaths</th>\r\n                            <th>Recovered</th>\r\n                            <th>Population</th>\r\n                        </tr>\r\n                        {filteredCountries.slice(selectNumber * (page - 1), selectNumber * page).map(country => <Country key={country.country} country={country} />)}\r\n                    </tbody>\r\n                </table>\r\n            </StyledCountries>\r\n\r\n\r\n            {pagesNumbers.map(pageNumber => <button className=\"btn btn-secondary\" key={pageNumber} onClick={() => setPage(pageNumber)}>{pageNumber}</button>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Countries","import { Pie } from 'react-chartjs-2'\r\n\r\n\r\nconst PieChart = ({ continents }) => {\r\n\r\n    let allContinents = continents.map(continent => continent.continent)\r\n    let allCases = continents.map(continent => continent.cases)\r\n\r\n\r\n    const data = {\r\n        labels: allContinents,\r\n        datasets: [\r\n            {\r\n                label: 'Total cases by continents',\r\n                fontColor:'white',\r\n                data: allCases ,\r\n                borderColor:'grey',\r\n                backgroundColor: [\r\n                    'rgb(209, 153, 10)',\r\n                    'rgb(148, 11, 11)',\r\n                    'rgb(11, 114, 20)',\r\n                    'rgb(96, 11, 129)',\r\n                    'rgb(10, 54, 173)',\r\n                    'rgb(5, 158, 158)'],\r\n            }\r\n        ]\r\n    }\r\n    const options = {\r\n        title: {\r\n            display: true,\r\n            text: 'Total cases by continent',\r\n            fontColor:'white',\r\n            fontSize:20\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: 'white'\r\n            }\r\n        },\r\n        maintainAspectRatio:false\r\n    }\r\n    return (\r\n        <>\r\n            <Pie data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PieChart","import { Line } from 'react-chartjs-2'\r\n\r\n\r\nconst LineChart = ({ days, cases, deaths, recovered }) => {\r\n\r\n    const data = {\r\n        labels: days,\r\n        datasets: [\r\n            {\r\n                label: 'Total cases',\r\n                data: cases,\r\n                borderColor: ['rgb(209, 153, 10, 0.2)'],\r\n                backgroundColor: ['rgb(209, 153, 10, 0.2)'],\r\n                pointBackgroundColor: 'rgb(209, 153, 10, 0.2)',\r\n                pointBorderColor: ' rgb(209, 153, 10, 0.2)'\r\n            },\r\n            {\r\n                label: 'Deaths',\r\n                data: deaths,\r\n                borderColor: ['rgb(148, 11, 11, 0.2)'],\r\n                backgroundColor: ['rgb(148, 11, 11, 0.2)'],\r\n                pointBackgroundColor: 'rgb(148, 11, 11, 0.2)',\r\n                pointBorderColor: 'rgb(148, 11, 11, 0.2)'\r\n            },\r\n            {\r\n                label: 'Recovered',\r\n                data: recovered,\r\n                borderColor: ['rgb(11, 114, 20, 0.4)'],\r\n                backgroundColor: ['rgb(11, 114, 20, 0.4)'],\r\n                pointBackgroundColor: 'rgb(11, 114, 20, 0.4)',\r\n                pointBorderColor: 'rgb(11, 114, 20, 0.4)'\r\n            }\r\n        ],\r\n    }\r\n    const options = {\r\n        title: {\r\n            display: true,\r\n            text: 'Total cases over time',\r\n            fontColor: 'white',\r\n            fontSize: 20\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: 120000000,\r\n                        stepSize: 20000000,\r\n                        fontColor: \"white\",\r\n                    },\r\n                }\r\n            ],\r\n            xAxes: [{\r\n                gridLines: {\r\n                    display: true,\r\n                },\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                }\r\n            }],\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontSize: 13,\r\n                fontColor: 'white'\r\n            }\r\n        },\r\n        maintainAspectRatio:false\r\n    }\r\n    return (\r\n        <>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LineChart","import styled from 'styled-components'\r\n\r\nexport const StyledHome = styled.div`\r\n\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 20% 20% 20% 20%;\r\n\tgrid-gap: 35px;\r\n\tmargin:80px auto;\r\n\twidth: 80%;\r\n\theight: 30%;\r\n\tjustify-content:center;\r\n\r\n.text-card {\r\n\twidth: 100%;\r\n\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n\tdisplay:inline-block;\r\n\ttext-align: center;\r\n\tbackground-color: #39455f;\r\n\t-webkit-box-shadow: 24px 21px 62px -4px rgba(12,13,38,1);\r\n\t-moz-box-shadow: 24px 21px 62px -4px rgba(12,13,38,1);\r\n\tbox-shadow: 24px 21px 62px -4px rgba(12,13,38,1);\r\n  }\r\n.text-card p{\r\n\tfont-size: 33px!important;\r\n\tbackground-color: #39455f;\r\n\twidth:100%;\r\n\toverflow:hidden;\r\n}\r\n.heading {\r\n\t  padding: 40px 10px;\r\n\t  background-color: #39455f;\r\n  }\r\n.text-box {\r\n\t  padding:10px;\r\n\t  background-color: #39455f;\r\n\t}\r\n.total-cases {\r\n\tborder:1px solid rgb(133, 131, 131);\r\n}\r\n.total-cases p{\r\n\tcolor:rgb(133, 131, 131)\r\n}\r\n\t\t \r\n.deaths {\r\n\tborder:1px solid rgb(194, 88, 88);\r\n\r\n\t\r\n}\r\n.deaths p{\r\n\tcolor: rgb(194, 88, 88)\r\n}\r\n\r\n.active{\r\n\tborder:1px solid rgb(102, 117, 187);\r\n\r\n}\r\n.active p{\r\n\tcolor:rgb(102, 117, 187)\r\n}\r\n.recovered{\r\n\tborder:1px solid rgb(102, 187, 106);\r\n\r\n}\r\n.recovered p{\r\n\tcolor:rgb(102, 187, 106)\r\n}\r\n@media (max-width:1373px){\r\n\tgrid-template-columns: 40% 40%;\r\n}\r\n@media (max-width:725px){\r\n\tgrid-template-columns: 80%;\r\n}\r\n`\r\n\r\nexport const StyledCharts = styled.div`\r\n\r\n\r\n    width: 100%;\r\n\tmargin:0 auto;\r\n\tdisplay:flex;\r\n\tflex-direction:column;\r\n\r\n.chart-container{\r\n    width: 80%!important;\r\n\theight:80vh;\r\n\tposition:relative;\r\n\tmargin:150px auto!important;\r\n    padding: 40px;\r\n    background-color: #39455f;\r\n    color: white;\r\n    display: block;\r\n    border-radius: 30px;\r\n    -webkit-box-shadow: 24px 21px 62px -4px rgba(12,13,38,1);\r\n\t-moz-box-shadow: 24px 21px 62px -4px rgba(12,13,38,1);\r\n\tbox-shadow: 24px 21px 62px -4px rgba(12,13,38,1);\r\n}\r\ncanvas{\r\n    background-color: #39455f\r\n}\r\n@media (max-width:670px){\r\n\t.chart-container {\r\n\t\twidth:100%!important;\r\n\t\theight:50vh!important;\r\n\t}\r\n}\r\n@media (max-width:320px){\r\n\t.chart-container {\r\n\t\theight:40vh!important;\r\n\t\tmargin:70px auto!important;\r\n\t}\r\n}\r\n@media (max-height:780px){\r\n\t.chart-container{\r\n\t\tmargin:70px auto!important;\r\n\t\theight:60vh!important;\r\n\t}\r\n}\r\n`\r\n\r\nexport const StyledDate = styled.div`\r\n    \r\n\tfont-size: 10px!important;\r\n     p {\r\n\tfont-size: 11px!important;\r\n}\r\n`","import { useEffect, useState } from \"react\"\r\nimport { getWorldStats } from \"../../service\"\r\nimport BarChart from \"../Charts/BarChart\"\r\nimport Countries from \"../Countries/Countries\"\r\nimport PieChart from \"../Charts/PieChart\"\r\nimport LineChart from \"../Charts/LineChart\"\r\nimport { StyledCharts, StyledHome,StyledDate } from './StyledHome'\r\n\r\n\r\nconst Home = ({ balkanCountries, continents, allCountries, historyStats, days, cases, deaths, recovered }) => {\r\n\r\n    const [worldStats, setWorldStats] = useState([])\r\n    \r\n    useEffect(() => {\r\n        getWorldStats().then(res => {\r\n            setWorldStats(res.data)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>  \r\n            <h1>World statistics</h1>\r\n            <StyledDate className='date'>Last updated:<p>{String(new Date(worldStats.updated).toLocaleString())}</p></StyledDate>\r\n            <StyledHome >\r\n                <div className=\"text-card total-cases\" >\r\n                    <div className=\"heading\">\r\n                        <p>{worldStats.cases?.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"text-box\">\r\n                        <p>Total cases</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-card deaths\">\r\n                    <div className=\"heading\">\r\n                        <p>{worldStats.deaths?.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"text-box\" >\r\n                        <p>Deaths</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-card recovered\" >\r\n                    <div className=\"heading\">\r\n                        <p>{worldStats.recovered?.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"text-box\">\r\n                        <p>Recovered</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-card active\">\r\n                    <div className=\"heading\">\r\n                        <p>{worldStats.active?.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"text-box\">\r\n                        <p>Active</p>\r\n                    </div>\r\n                </div>\r\n            </StyledHome>\r\n\r\n            <Countries allCountries={allCountries} />\r\n\r\n            <StyledCharts>\r\n                <div className=\"chart-container\">\r\n                    <LineChart historyStats={historyStats} days={days} deaths={deaths} cases={cases} recovered={recovered} />\r\n                </div>\r\n                <div className=\"chart-container\">\r\n                    <PieChart continents={continents} />\r\n                </div>\r\n                <div className=\"chart-container\">\r\n                    <BarChart balkanCountries={balkanCountries} />\r\n                </div>\r\n            </StyledCharts>\r\n        </>\r\n    )\r\n}\r\nexport default Home","import styled from 'styled-components'\r\n\r\nexport const StyledLogin = styled.div`\r\n\r\n\twidth: 750px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    margin:0 auto;\r\n\theight: 500px; \r\n\tborder: 1px solid black;\r\n\tbackground-color:#242c3d;\r\n\tpadding-top:150px;\r\n    border-radius:100px;\r\n\r\n    .username-input input,.password-input input{\r\n        height:80%!important;\r\n    }\r\n    div {\r\n\tbackground-color:#242c3d;\r\n}\r\n    p {\r\n\r\n    background-color:#242c3d;    \r\n\tfont-size:15px!important;\r\n    border-radius:100px;\r\n}   \r\n    a {\r\n\tfont-size:15px!important;\r\n    border-radius:100px\r\n}\r\n    .text-login {\r\n        padding:0;\r\n        width:95%;\r\n        margin:0 auto;\r\n        overflow:hidden;\r\n}\r\n    input[type=text]{\r\n    margin-right:7px;\r\n}\r\n    .div-submit{\r\n    padding:30px 15px;\r\n}\r\n@media (max-width:750px){\r\n    width:80%;\r\n    input[type=text] {\r\n        margin-right:5px;\r\n        width:50%;\r\n        height:20%;\r\n        font-size:17px!important;\r\n    }\r\n    input[type=password]{\r\n        width:50%;\r\n        height:20%;\r\n        font-size:17px!important;\r\n    }\r\n    p,a {\r\n        font-size:14px!important;\r\n        margin-bottom:4px;\r\n    }\r\n    .username-input,.password-input{\r\n        font-size:17px!important;\r\n\r\n    }\r\n    .div-submit input {\r\n        width:30%;\r\n        display:flex;\r\n        margin:0 auto;\r\n        justify-content:center;\r\n        align-items:center;\r\n    }\r\n}\r\n`","import { useState } from \"react\"\r\nimport { useHistory } from \"react-router\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { getAllUsers } from \"../../service\"\r\nimport { StyledLogin } from \"./StyledLogin\"\r\n\r\nconst Login = ({ setUser, user, loginUsername, setLoginUsername }) => {\r\n\r\n    const [loginPassword, setLoginPassword] = useState('')\r\n    const [loginError, setLoginError] = useState('')\r\n\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <StyledLogin>\r\n            <form onSubmit={(e) => {\r\n                e.preventDefault()\r\n                getAllUsers().then(res => {\r\n                    let user = res.data.find(el => (el.username === loginUsername || el.email === loginUsername) && el.password === loginPassword)\r\n                    if (user) {\r\n                        setUser(user)\r\n                        history.push('/')\r\n                    }\r\n                    else {\r\n                        setLoginError(<p>You have entered an invalid username or password</p>)\r\n                    }\r\n                })\r\n            }}>\r\n                <div>\r\n                    <div className=\"username-input\">Username: <input type=\"text\" placeholder=\"Username...\" onChange={e => setLoginUsername(e.target.value)} /></div>\r\n                    <div className=\"password-input\">Password: <input type=\"password\" placeholder=\"Password...\" onChange={e => setLoginPassword(e.target.value)} /></div>\r\n                    <div className=\"div-submit\"><input type=\"submit\" className=\"btn btn-secondary\" style={{ paddingLeft: '50px', paddingRight: '50px' }} value=\"Login\" /></div>\r\n                </div>\r\n            </form>\r\n            {loginError}\r\n            {user ?\r\n                null\r\n                :\r\n                <div className=\"text-login\">\r\n                    <p>You have to log in to see detailed statistics for each country</p>\r\n                    <p>No account?<Link to='/register'>Create one</Link></p>\r\n                </div>\r\n            }\r\n        </StyledLogin>\r\n    )\r\n}\r\nexport default Login","import styled from 'styled-components'\r\n\r\nexport const StyledRegister = styled.div`\r\n    \r\n\twidth: 750px;\r\n\tdisplay:flex;\r\n\tflex-direction:column;\r\n\tmargin:0 auto;\r\n\theight: 500px; \r\n\tborder: 1px solid black;\r\n\tbackground-color:#242c3d;\r\n\tpadding-top:135px;\r\n\tpadding-bottom:75px;\r\n    border-radius:100px;\r\n\r\n.register-input{\r\n\tbackground-color: #242c3d;\r\n\twidth:80%;\r\n\tmargin:0 auto;\r\n\tdisplay:flex;\r\n\tflex-direction:column;\r\n}\r\n.email{\r\n\tbackground-color: #242c3d;\r\n\tmargin-left: 45px!important;\r\n}\r\n.password{\r\n\tmargin-left:8px;\r\n\tbackground-color: #242c3d;\r\n}\r\n.submit{\r\n\tbackground-color: #242c3d;\r\n\tpadding: 25px;\r\n}\r\n.submit input {\r\n\tpadding-left:50px;\r\n\tpadding-right:50px;\r\n\theight:80%;\r\n\twidth:50%;\r\n\tdisplay:flex;\r\n\tjustify-content:center;\r\n\talign-items:center;\r\n\tmargin:0 auto;\r\n}\r\n.username{\r\n\tbackground-color: #242c3d;\r\n}\r\n.error{\r\n    background-color: #242c3d;\r\n    margin-left:75px;\r\n    margin-right:75px;\r\n    \r\n}\r\n.email input,.password input,.username input {\r\n\t\theight:80%!important;\r\n\t}\r\n@media (max-width:750px){\r\n    width:80%; \r\n\r\n\t.username,.email,.password{\r\n\t\tmargin:0!important;\r\n\t\tfont-size:17px!important;\r\n\t}\r\n\t.email input,.password input,.username input {\r\n\t\twidth:50%;\r\n\t\tfont-size:17px!important;\r\n\t}\r\n\t.email input{\r\n\t\tmargin-left:35px;\r\n\t}\r\n\t.password  input{\r\n\t\tmargin-left:6px!important;\r\n\t}\r\n\tform{\r\n\t\twidth:100%;\r\n\t\tmargin:0 auto;\r\n\t}\r\n\t.error{\r\n\t\tmargin:0 auto;\r\n\t\twidth:70%;\r\n\t\tfont-size:14px!important;\r\n\t}\r\n}\r\n`","import { registerUser } from \"../../service\"\r\nimport { getAllUsers } from \"../../service\"\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useState } from \"react\"\r\nimport { StyledRegister } from \"../Register/StyledRegister\"\r\n\r\n\r\nconst Register = () => {\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState()\r\n    const [error, setError] = useState('')\r\n\r\n    const history = useHistory()\r\n\r\n    let regEx = /(?=.*[A-Z])(?=.*[0-9])(?=.*[a-z])/\r\n    let emailRegEx = /^\\w+@[a-zA-Z_]+?\\.[a-zA-Z]{2,3}$/\r\n\r\n    const validData = (password, username,email) => username?.length >= 4 && password?.length >= 6 && regEx.test(password) && emailRegEx.test(email)\r\n\r\n    const errorType = () => {\r\n        if (!regEx.test(password)) setError('Password must contain at least one upper case,one lower case,and one number')\r\n        if (password?.length < 6) setError('Password must have at least 6 characters')\r\n        if (username?.length < 4) setError('Username must have at least 4 characters')\r\n        if (!emailRegEx.test(email)) setError('Invalid email adress')\r\n    }\r\n    return (\r\n        <StyledRegister >\r\n            <form onSubmit={e => {\r\n                e.preventDefault()\r\n                if (!validData(password, username,email)) {\r\n                    errorType()\r\n                    return\r\n                }\r\n                getAllUsers().then(res => {\r\n                    if (!res.data.some(user => user.username === username || user.email === email)) {\r\n                        registerUser(username, email, password).then(() => {\r\n                            history.push('/login')\r\n                        })\r\n                    }\r\n                    else {\r\n                        window.alert('User already exists')\r\n                    }\r\n                    console.log(res.data)\r\n                })\r\n            }}>\r\n                <div className=\"register-input\">\r\n                    <div className=\"username\">Username: <input type=\"text\" placeholder=\"Username...\" onChange={e => setUsername(e.target.value)} /></div>\r\n                    <div className=\"email\">Email: <input type=\"email\" placeholder=\"Email...\" onChange={e => setEmail(e.target.value)} /></div>\r\n                    <div className=\"password\">Password: <input type=\"password\" placeholder=\"Password...\" onChange={e => setPassword(e.target.value)} /></div>\r\n                    <div className=\"submit\"><input  className=\"btn btn-secondary\" type=\"submit\" value=\"Register\" /></div>\r\n                </div>\r\n            </form>\r\n            <div className=\"error\">{error}</div>\r\n        </StyledRegister>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Register","import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nexport const StyledNav = styled.nav`\r\n   overflow: hidden;\r\n   text-align: right;\r\n   background-color:  #242c3d;\r\n   border-bottom:2px solid #39455f ;\r\n   width:100%;\r\n   span{\r\n     margin-left:30px;\r\n     margin-right:30px;\r\n     background-color:#242c3d;\r\n   }\r\n`\r\n\r\nexport const StyledLink = styled(Link)`\r\n  padding:10px;\r\n  background-color:#242c3d;\r\n`","import { StyledLink, StyledNav } from './StyledNav'\r\n\r\nconst Nav = ({ user, setUser, loginUsername }) => {\r\n    return (\r\n        <header>\r\n            <StyledNav >\r\n                <StyledLink to=\"/\">Home</StyledLink>\r\n                {\r\n                    user\r\n                        ?\r\n                        <>\r\n                            <span>{loginUsername}</span>\r\n                            <button className='btn btn-secondary' onClick={() => setUser(null)}>Log out</button>\r\n                        </>\r\n                        :\r\n                        <>\r\n                            <StyledLink to=\"/login\">Login</StyledLink>\r\n                            <StyledLink to=\"/register\">Register</StyledLink>\r\n                        </>\r\n                }\r\n            </StyledNav>\r\n            <h1 style={{ textAlign: 'left' }}>Covid-19 Tracker</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav","import { Line } from 'react-chartjs-2'\r\n\r\n\r\nconst SingleLineChart = ({ days, cases, recovered, deaths }) => {\r\n\r\n    const data = {\r\n        labels: days,\r\n        datasets: [\r\n            {\r\n                label: 'Total cases',\r\n                data: cases,\r\n                borderColor: ['rgb(209, 153, 10, 0.2)'],\r\n                backgroundColor: ['rgb(209, 153, 10, 0.2)'],\r\n                pointBackgroundColor: 'rgb(209, 153, 10, 0.2)',\r\n                pointBorderColor: ' rgb(209, 153, 10, 0.2)'\r\n            },\r\n            {\r\n                label: 'Deaths',\r\n                data: deaths,\r\n                borderColor: ['rgb(148, 11, 11, 0.2)'],\r\n                backgroundColor: ['rgb(148, 11, 11, 0.2)'],\r\n                pointBackgroundColor: 'rgb(148, 11, 11, 0.2)',\r\n                pointBorderColor: 'rgb(148, 11, 11, 0.2)'\r\n            },\r\n            {\r\n                label: 'Recovered',\r\n                data: recovered,\r\n                borderColor: ['rgb(11, 114, 20, 0.4)'],\r\n                backgroundColor: ['rgb(11, 114, 20, 0.4)'],\r\n                pointBackgroundColor: 'rgb(11, 114, 20, 0.4)',\r\n                pointBorderColor: 'rgb(11, 114, 20, 0.4)'\r\n            }\r\n        ]\r\n    }\r\n    const options = {\r\n        title: {\r\n            display: true,\r\n            text: 'Total cases over last 30 days',\r\n            fontColor: 'white',\r\n            fontSize:20\r\n        },\r\n        scales: {\r\n            yAxes: [\r\n                {\r\n                    ticks: {\r\n                        min: 0,\r\n                        max: Math.max(...cases),\r\n                        stepSize: cases / 5,\r\n                        fontColor: \"white\",\r\n                    }\r\n                }\r\n            ],\r\n            xAxes: [{\r\n                gridLines: {\r\n                    display: true,\r\n                },\r\n                ticks: {\r\n                    fontColor: \"white\",\r\n                }\r\n            }],\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontSize: 13,\r\n                fontColor: 'white'\r\n            }\r\n        },\r\n        maintainAspectRatio:false\r\n    }\r\n    return (\r\n        <>\r\n            <Line data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleLineChart","import { Doughnut } from 'react-chartjs-2'\r\n\r\n\r\nconst SingleDoughnutChart = ({ countryDetail }) => {\r\n\r\n    const data = {\r\n        labels: ['Total cases', 'Active', 'Deaths', 'Recovered'],\r\n        datasets: [\r\n            {\r\n                label: 'Statistics per 1 million people',\r\n                data: [countryDetail?.casesPerOneMillion, countryDetail?.activePerOneMillion, countryDetail?.deathsPerOneMillion, countryDetail?.recoveredPerOneMillion],\r\n                borderColor: 'grey',\r\n                backgroundColor: [\r\n                    'rgb(209, 153, 10)',\r\n                    'rgb(10, 54, 173)',\r\n                    'rgb(148, 11, 11)',\r\n                    'rgb(11, 114, 20)',\r\n                ],\r\n            }\r\n        ]\r\n    }\r\n    const options = {\r\n        title: {\r\n            display: true,\r\n            text: 'Statistics per 1 million people',\r\n            fontColor: 'white',\r\n            fontSize:20\r\n        },\r\n        legend: {\r\n            labels: {\r\n                fontColor: 'white'\r\n            }\r\n        },\r\n        maintainAspectRatio:false\r\n    }\r\n    return (\r\n        <>\r\n            <Doughnut data={data} options={options} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SingleDoughnutChart","import styled from 'styled-components'\r\n\r\nexport const StyledCountryDetails = styled.div`\r\n    display: grid;\r\n\tgrid-template-columns: 20% 20% 20% 20%;\r\n\tgrid-gap: 35px;\r\n\tmargin:150px auto;\r\n\twidth: 70%;\r\n\theight: 30%;\r\n\tjustify-content:space-between;\r\n\r\n.single-text-cards {\r\n\twidth: 100%;\r\n\tbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n\ttext-align: center;\r\n\tbackground-color: #39455f;\r\n    margin:20px auto;\r\n\t-webkit-box-shadow: 24px 21px 62px -4px rgba(12,13,38,1);\r\n\t-moz-box-shadow: 24px 21px 62px -4px rgba(12,13,38,1);\r\n\tbox-shadow: 24px 21px 62px -4px rgba(12,13,38,1);\r\n  }\r\n.single-text-cards p{\r\n\tfont-size: 25px!important;\r\n\twidth:100%;\r\n\toverflow:hidden;\r\n\theight:auto;\r\n}\r\np {\r\n    background-color:#39455f\r\n}\r\n.heading {\r\n\t  padding: 40px 10px;\r\n\t  background-color: #39455f;\r\n  }\r\n.text-box {\r\n\t  padding:10px;\r\n\t  background-color: #39455f;\r\n\t}\r\n.total-cases {\r\n\tborder:1px solid rgb(133, 131, 131);\r\n}\r\n.total-cases p{\r\n\tcolor:rgb(133, 131, 131);\r\n}\t \r\n.deaths {\r\n\tborder:1px solid rgb(194, 88, 88);\r\n}\r\n.deaths p{\r\n\tcolor: rgb(194, 88, 88)\r\n}\r\n.active{\r\n\tborder:1px solid rgb(102, 117, 187);\r\n}\r\n.active p{\r\n\tcolor:rgb(102, 117, 187)\r\n}\r\n.recovered{\r\n\tborder:1px solid rgb(102, 187, 106);\r\n}\r\n.recovered p{\r\n\tcolor:rgb(102, 187, 106)\r\n}\r\n.population {\r\n    border:1px solid rgb(209, 153, 10)\r\n}\r\n.population p {\r\n    color:rgb(209, 153, 10)\r\n}\r\n.tests{\r\n    border:1px solid #b8a9c9\r\n}\r\n.tests p{\r\n    color:#b8a9c9\r\n}\r\n.today-cases{\r\n    border:1px solid #c0ded9\r\n}\r\n.today-cases p{\r\n    color:#c0ded9\r\n}\r\n.today-deaths{\r\n    border:1px solid #a96e5b\r\n}\r\n.today-deaths p{\r\n    color:#a96e5b\r\n}\r\n.critical{\r\n    border:1px solid #f76b6b\r\n}\r\n.critical p{\r\n    color:#f7786b\r\n}\r\n@media(max-width:1024px){\r\n\tgrid-template-columns:40% 40%;\r\n}\r\n@media(max-width:520px){\r\n\tgrid-template-columns:80%;\r\n\tjustify-content:center;\r\n\talign-items:center;\r\n\tmargin:80px auto;\r\n}\r\n`","import { useEffect, useState } from \"react\"\r\nimport { Redirect, useParams } from \"react-router-dom\"\r\nimport { getOneCountryHistory } from \"../../service\"\r\nimport SingleLineChart from \"../Charts/SingleLineChart\"\r\nimport SingleDoughnutChart from \"../Charts/SingleDoughnutChart\"\r\nimport { StyledCharts } from \"../Home/StyledHome\"\r\nimport { StyledCountryDetails } from \"./StyledCountryDetails\"\r\n\r\nconst CountryDetails = ({ allCountries, user }) => {\r\n\r\n    const [oneCountryHistory, setOneCountryHistory] = useState(null)\r\n\r\n    const cases = oneCountryHistory ? Object.values(oneCountryHistory.timeline.cases) : []\r\n    const deaths = oneCountryHistory ? Object.values(oneCountryHistory.timeline.deaths) : []\r\n    const recovered = oneCountryHistory ? Object.values(oneCountryHistory.timeline.recovered) : []\r\n    const days = oneCountryHistory ? Object.keys(oneCountryHistory.timeline.cases) : []\r\n\r\n    let { country } = useParams()\r\n\r\n    let countryDetail = allCountries.find(c => c.country == country)\r\n\r\n    useEffect(() => {\r\n        let mounted = true\r\n        getOneCountryHistory(country).then(res => {\r\n            if (mounted)\r\n                setOneCountryHistory(res.data)\r\n        })\r\n        return () => mounted = false\r\n    }, [])\r\n\r\n    return user ? (\r\n        <>\r\n            <h1>{countryDetail?.country}</h1>\r\n\r\n            <StyledCountryDetails >\r\n                <div className=\"single-text-cards total-cases\" >\r\n                    <div className=\"heading\">\r\n                        <p> {countryDetail?.cases.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"text-box\">\r\n                        <p>Total cases</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"single-text-cards recovered\" >\r\n                    <div className=\"heading\">\r\n                        <p> {countryDetail?.recovered.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"text-box\">\r\n                        <p>Recovered</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"single-text-cards deaths\" >\r\n                    <div className=\"heading\">\r\n                        <p> {countryDetail?.deaths.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"text-box\">\r\n                        <p>Deaths</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"single-text-cards critical\" >\r\n                    <div className=\"heading\">\r\n                        <p> {countryDetail?.critical.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"text-box\">\r\n                        <p>Critical</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"single-text-cards population\" >\r\n                    <div className=\"heading\">\r\n                        <p> {countryDetail?.population.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"text-box\">\r\n                        <p>Population</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"single-text-cards tests\" >\r\n                    <div className=\"heading\">\r\n                        <p> {countryDetail?.tests.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"text-box\" >\r\n                        <p>Tests</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"single-text-cards today-cases\" >\r\n                    <div className=\"heading\">\r\n                        <p> {countryDetail?.todayCases.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"text-box\">\r\n                        <p>Today cases</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"single-text-cards today-deaths\" >\r\n                    <div className=\"heading\">\r\n                        <p> {countryDetail?.todayDeaths.toLocaleString()}</p>\r\n                    </div>\r\n                    <div className=\"text-box\">\r\n                        <p>Today deaths</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </StyledCountryDetails >\r\n\r\n            <StyledCharts>\r\n                <div className=\"chart-container\" style={{ marginBottom: '3110px' }}>\r\n                    <SingleDoughnutChart countryDetail={countryDetail} />\r\n                </div>\r\n                {oneCountryHistory ?\r\n                    <div className=\"chart-container\">\r\n                        <SingleLineChart days={days} cases={cases} deaths={deaths} recovered={recovered} />\r\n                    </div>\r\n                    :\r\n                    null}\r\n            </StyledCharts>\r\n        </>\r\n    )\r\n        :\r\n        (\r\n            <Redirect to='/login'></Redirect>\r\n        )\r\n}\r\n\r\nexport default CountryDetails","import styled from 'styled-components'\r\n\r\nexport const StyledFooter = styled.footer`\r\n     \r\n    background-color: #242c3d;\r\n\tborder-top:2px solid #39455f ;\r\n\twidth: 100%;\r\n\tposition: fixed;\r\n  \tleft: 0;\r\n  \tbottom: 0;\r\n \ttext-align: center;\r\n\r\n p {\r\n\tbackground-color: #242c3d;\r\n\tfont-size: 12px!important;\r\n\tmargin:0;\r\n}\r\n a {\r\n\tbackground-color: #242c3d;\r\n\tfont-size: 12px!important;\r\n\tmargin:0;\r\n}\r\n`","import { StyledFooter } from \"./StyledFooter\"\r\n\r\nconst Footer = () => {\r\n    return(\r\n        <StyledFooter >\r\n            <p>Author: Nemanja Bogetic</p>\r\n            <p>Data from <a href={'https://disease.sh/docs/'}>NOVELCoVID19 API</a></p>\r\n        </StyledFooter>\r\n    )\r\n}\r\n\r\nexport default Footer","import { useEffect, useState } from \"react\"\nimport Home from \"./components/Home/Home\"\nimport Login from \"./components/Login/Login\"\nimport Register from \"./components/Register/Register\"\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Nav from \"./components/Nav/Nav\"\nimport { getAllCountries, getBalkan, getContinents, getHistoricalStats } from \"./service\"\nimport CountryDetails from \"../src/components/CountryDetails/CountryDetails\"\nimport Footer from './components/Footer/Footer'\nimport './main.css'\n\n\n\nconst App = () => {\n\n    const [user, setUser] = useState(null)\n    const [allCountries, setAllCountries] = useState([])\n    const [historyStats, setHistoryStats] = useState([])\n    const [continents, setContinents] = useState([])\n    const [balkanCountries, setBalkanCountries] = useState([])\n    const [loginUsername, setLoginUsername] = useState('')\n\n    useEffect(() => {\n        getHistoricalStats().then(res => {\n            setHistoryStats(res.data)\n        })\n    }, [])\n    useEffect(() => {\n        getContinents().then(res => {\n            setContinents(res.data)\n        })\n    }, [])\n    useEffect(() => {\n        getAllCountries().then(res => {\n            setAllCountries(res.data)\n        })\n    }, [])\n    useEffect(() => {\n        getBalkan().then(res => {\n            setBalkanCountries(res.data)\n        })\n    }, [])\n\n    let days = Object.keys(historyStats.cases ? historyStats.cases : historyStats)\n    let cases = Object.values(historyStats.cases ? historyStats.cases : historyStats)\n    let deaths = Object.values(historyStats.deaths ? historyStats.deaths : historyStats)\n    let recovered = Object.values(historyStats.recovered ? historyStats.recovered : historyStats)\n\n    return (\n        <>\n            <Router basename={'/COVID-19-Tracker'}>\n                <Nav user={user} loginUsername={loginUsername} setUser={setUser} />\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home\n                            continents={continents}\n                            allCountries={allCountries}\n                            historyStats={historyStats}\n                            days={days} deaths={deaths}\n                            cases={cases}\n                            recovered={recovered}\n                            balkanCountries={balkanCountries}\n                        />\n                    </Route>\n                    <Route path=\"/login\">\n                        <Login loginUsername={loginUsername} setLoginUsername={setLoginUsername} setUser={setUser} user={user} />\n                    </Route>\n                    <Route path=\"/register\">\n                        <Register />\n                    </Route>\n                    <Route path=\"/:country\">\n                        <CountryDetails allCountries={allCountries} user={user} />\n                    </Route>\n                </Switch>\n            </Router>\n            <Footer />\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}